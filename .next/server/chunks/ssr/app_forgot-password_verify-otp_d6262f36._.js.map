{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/app/forgot-password/verify-otp/page.module.css [app-ssr] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"card\": \"page-module__g4S5SW__card\",\n  \"container\": \"page-module__g4S5SW__container\",\n  \"otpContainer\": \"page-module__g4S5SW__otpContainer\",\n  \"otpInput\": \"page-module__g4S5SW__otpInput\",\n  \"resendLink\": \"page-module__g4S5SW__resendLink\",\n  \"resendText\": \"page-module__g4S5SW__resendText\",\n  \"subtitle\": \"page-module__g4S5SW__subtitle\",\n  \"title\": \"page-module__g4S5SW__title\",\n  \"verifyButton\": \"page-module__g4S5SW__verifyButton\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 18, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/tandi/Desktop/rseb_bond_tokenization-master/app/forgot-password/verify-otp/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { useState, useRef, ChangeEvent, KeyboardEvent } from 'react';\r\nimport Link from 'next/link'; // Import the Link component\r\nimport styles from './page.module.css';\r\n\r\nconst OtpVerificationPage = () => {\r\n    // State to hold the 6 digits of the OTP\r\n    const [otp, setOtp] = useState<string[]>(new Array(6).fill(''));\r\n\r\n    // Ref to hold references to the input elements\r\n    const inputRefs = useRef<(HTMLInputElement | null)[]>([]);\r\n\r\n    // Function to handle changes in OTP input fields\r\n    const handleChange = (e: ChangeEvent<HTMLInputElement>, index: number) => {\r\n        const value = e.target.value;\r\n\r\n        // Ensure only numeric values are entered\r\n        if (isNaN(Number(value))) return;\r\n\r\n        // Create a new OTP array and update the digit at the current index\r\n        const newOtp = [...otp];\r\n        newOtp[index] = value.substring(value.length - 1); // Get the last digit\r\n        setOtp(newOtp);\r\n\r\n        // If a value is entered and it's not the last input, focus the next one\r\n        if (value && index < 5) {\r\n            inputRefs.current[index + 1]?.focus();\r\n        }\r\n    };\r\n\r\n    // Function to handle the backspace key for easier editing\r\n    const handleKeyDown = (e: KeyboardEvent<HTMLInputElement>, index: number) => {\r\n        // If backspace is pressed on an empty input, move focus to the previous one\r\n        if (e.key === 'Backspace' && !otp[index] && index > 0) {\r\n            inputRefs.current[index - 1]?.focus();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.card}>\r\n                <h1 className={styles.title}>Forgot Password</h1>\r\n                <p className={styles.subtitle}>\r\n                    Enter the 6-digit code we sent in your mail\r\n                </p>\r\n                <div className={styles.otpContainer}>\r\n                    {otp.map((digit, index) => (\r\n                        <input\r\n                            key={index}\r\n                            type=\"text\"\r\n                            maxLength={1}\r\n                            value={digit}\r\n                            onChange={(e) => handleChange(e, index)}\r\n                            onKeyDown={(e) => handleKeyDown(e, index)}\r\n                            ref={(el) => (inputRefs.current[index] = el)}\r\n                            className={styles.otpInput}\r\n                        />\r\n                    ))}\r\n                </div>\r\n\r\n                {/* Link to the reset password page, styled as a button */}\r\n                <Link href=\"/forgot-password/reset-password\" className={styles.verifyButton}>\r\n                    Verify & Continue\r\n                </Link>\r\n\r\n                <p className={styles.resendText}>\r\n                    Didn't get the code? <button className={styles.resendLink}>Resend</button>\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OtpVerificationPage;"],"names":[],"mappings":";;;;;AAEA;AACA,8QAA8B,4BAA4B;AAC1D;AAJA;;;;;AAMA,MAAM,sBAAsB;IACxB,wCAAwC;IACxC,MAAM,CAAC,KAAK,OAAO,GAAG,IAAA,iNAAQ,EAAW,IAAI,MAAM,GAAG,IAAI,CAAC;IAE3D,+CAA+C;IAC/C,MAAM,YAAY,IAAA,+MAAM,EAA8B,EAAE;IAExD,iDAAiD;IACjD,MAAM,eAAe,CAAC,GAAkC;QACpD,MAAM,QAAQ,EAAE,MAAM,CAAC,KAAK;QAE5B,yCAAyC;QACzC,IAAI,MAAM,OAAO,SAAS;QAE1B,mEAAmE;QACnE,MAAM,SAAS;eAAI;SAAI;QACvB,MAAM,CAAC,MAAM,GAAG,MAAM,SAAS,CAAC,MAAM,MAAM,GAAG,IAAI,qBAAqB;QACxE,OAAO;QAEP,wEAAwE;QACxE,IAAI,SAAS,QAAQ,GAAG;YACpB,UAAU,OAAO,CAAC,QAAQ,EAAE,EAAE;QAClC;IACJ;IAEA,0DAA0D;IAC1D,MAAM,gBAAgB,CAAC,GAAoC;QACvD,4EAA4E;QAC5E,IAAI,EAAE,GAAG,KAAK,eAAe,CAAC,GAAG,CAAC,MAAM,IAAI,QAAQ,GAAG;YACnD,UAAU,OAAO,CAAC,QAAQ,EAAE,EAAE;QAClC;IACJ;IAEA,qBACI,8OAAC;QAAI,WAAW,yKAAM,CAAC,SAAS;kBAC5B,cAAA,8OAAC;YAAI,WAAW,yKAAM,CAAC,IAAI;;8BACvB,8OAAC;oBAAG,WAAW,yKAAM,CAAC,KAAK;8BAAE;;;;;;8BAC7B,8OAAC;oBAAE,WAAW,yKAAM,CAAC,QAAQ;8BAAE;;;;;;8BAG/B,8OAAC;oBAAI,WAAW,yKAAM,CAAC,YAAY;8BAC9B,IAAI,GAAG,CAAC,CAAC,OAAO,sBACb,8OAAC;4BAEG,MAAK;4BACL,WAAW;4BACX,OAAO;4BACP,UAAU,CAAC,IAAM,aAAa,GAAG;4BACjC,WAAW,CAAC,IAAM,cAAc,GAAG;4BACnC,KAAK,CAAC,KAAQ,UAAU,OAAO,CAAC,MAAM,GAAG;4BACzC,WAAW,yKAAM,CAAC,QAAQ;2BAPrB;;;;;;;;;;8BAajB,8OAAC,uKAAI;oBAAC,MAAK;oBAAkC,WAAW,yKAAM,CAAC,YAAY;8BAAE;;;;;;8BAI7E,8OAAC;oBAAE,WAAW,yKAAM,CAAC,UAAU;;wBAAE;sCACR,8OAAC;4BAAO,WAAW,yKAAM,CAAC,UAAU;sCAAE;;;;;;;;;;;;;;;;;;;;;;;AAK/E;uCAEe","debugId":null}}]
}